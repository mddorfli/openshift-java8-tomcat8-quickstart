#!/bin/bash
tomcat_version=8.5.15
export JAVA_HOME=${OPENSHIFT_DATA_DIR}jdk1.8.0_131
export TOMCAT_HOME=${OPENSHIFT_DATA_DIR}apache-tomcat-${tomcat_version}
export M2_HOME=${OPENSHIFT_DATA_DIR}apache-maven-3.5.0
export PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH

# install maven
if [ ! -d $M2_HOME ]
then
	maven_inst_file=apache-maven-3.5.0-bin.tar.gz
	cd $OPENSHIFT_DATA_DIR
	wget http://www-eu.apache.org/dist/maven/maven-3/3.5.0/binaries/$maven_inst_file
	tar -vxf $maven_inst_file
	rm -f $maven_inst_file
fi

# Print a trace of simple commands, for commands, case commands, select commands, and arithmetic for commands and their arguments or associated word lists after they are expanded and before they are executed.
set -x

# create a maven global-settings file if it doesn't exist
if [ ! -f ${OPENSHIFT_DATA_DIR}maven.xml ]
then
	cd $OPENSHIFT_DATA_DIR
	echo "<settings>" > maven.xml
	echo "  <localRepository>${OPENSHIFT_DATA_DIR}maven</localRepository>" >> maven.xml
	echo "</settings>" >> maven.xml
fi

# If your application uses the database, you can modify this script template to replace 
# the jdbc connection url in your property file with openshift's DB connection settings.
# if [ -f ${OPENSHIFT_REPO_DIR}conf/config.properties ]
# then
# 	cd ${OPENSHIFT_REPO_DIR}conf
# 	sed -i "s#^server\.jdbc\.url=jdbc:postgresql:\/\/\([a-zA-Z0-9\.]\+\):\([0-9]\+\)\/\(\w\+\)\$#server\.jdbc\.url=jdbc:postgresql:\/\/$OPENSHIFT_POSTGRESQL_DB_HOST:$OPENSHIFT_POSTGRESQL_DB_PORT\/\3#g" config.properties
# fi
